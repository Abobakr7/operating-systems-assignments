package app.cpu.scheduling;


public class MainFrame extends javax.swing.JFrame {

    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numProcessesLabel = new javax.swing.JLabel();
        contextLabel = new javax.swing.JLabel();
        rrLabel = new javax.swing.JLabel();
        processSlider = new javax.swing.JSlider();
        contextSlider = new javax.swing.JSlider();
        rrSlider = new javax.swing.JSlider();
        algoBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        processTextArea = new javax.swing.JTextArea();
        enterBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("mainFrame"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1000, 500));
        setResizable(false);

        numProcessesLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        numProcessesLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        numProcessesLabel.setText("Number of Processes");
        numProcessesLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        contextLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        contextLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        contextLabel.setText("Context Switching Time");
        contextLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        rrLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rrLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rrLabel.setText("Round Robin Time");
        rrLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        processSlider.setMajorTickSpacing(1);
        processSlider.setMaximum(7);
        processSlider.setMinimum(1);
        processSlider.setPaintLabels(true);
        processSlider.setPaintTicks(true);
        processSlider.setSnapToTicks(true);
        processSlider.setValue(4);

        contextSlider.setMajorTickSpacing(1);
        contextSlider.setMaximum(5);
        contextSlider.setPaintLabels(true);
        contextSlider.setPaintTicks(true);
        contextSlider.setSnapToTicks(true);
        contextSlider.setValue(0);

        rrSlider.setMajorTickSpacing(1);
        rrSlider.setMaximum(5);
        rrSlider.setMinimum(1);
        rrSlider.setPaintLabels(true);
        rrSlider.setPaintTicks(true);
        rrSlider.setSnapToTicks(true);
        rrSlider.setValue(1);

        algoBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Shortest Job First (SJF)", "Shortest Remaining Time First (SRTF)", "Priority Scheduling", "AG Scheduling" }));

        processTextArea.setColumns(20);
        processTextArea.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        processTextArea.setLineWrap(true);
        processTextArea.setRows(5);
        processTextArea.setText("Enter process name, color, arrival time, burst time, and priority number\nEx:\nP1 red 0 5 1\nP2 green 3 4 2");
        jScrollPane2.setViewportView(processTextArea);

        enterBtn.setText("Enter");
        enterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rrSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(contextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(contextSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(numProcessesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(processSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(algoBox, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 162, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
            .addGroup(layout.createSequentialGroup()
                .addGap(424, 424, 424)
                .addComponent(enterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numProcessesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(processSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contextSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(rrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(rrSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(53, 53, 53)
                        .addComponent(algoBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(enterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterBtnActionPerformed
        // TODO add your handling code here:
        int nProcess = this.processSlider.getValue();
        int contextSwtichTime = this.contextSlider.getValue();
        int rrTime = this.rrSlider.getValue();
        int algoIndex = this.algoBox.getSelectedIndex();
        String[] processesInfo = this.processTextArea.getText().split("\n");
        
        if (processesInfo.length != nProcess) {
//            alertBox("Please Enter the Same number of Processes");
            return;
        }
        
        String name, color;
        int arrivalTime, burstTime, priority;
        for (int i = 0; i < nProcess; ++i) {
            String[] info = processesInfo[i].split("\\s+");
            name = info[0];
            color = info[1].toUpperCase();
            try {
                arrivalTime = Integer.parseInt(info[2]);
                burstTime = Integer.parseInt(info[3]);
                priority = Integer.parseInt(info[4]);                
            } catch (NumberFormatException e) {
                
            }
        }
    }//GEN-LAST:event_enterBtnActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> algoBox;
    private javax.swing.JLabel contextLabel;
    private javax.swing.JSlider contextSlider;
    private javax.swing.JButton enterBtn;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel numProcessesLabel;
    private javax.swing.JSlider processSlider;
    private javax.swing.JTextArea processTextArea;
    private javax.swing.JLabel rrLabel;
    private javax.swing.JSlider rrSlider;
    // End of variables declaration//GEN-END:variables
}
